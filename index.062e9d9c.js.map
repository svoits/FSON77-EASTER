{"mappings":"AAAA,IAAAA,EAAe,CACbC,KAAMC,SAASC,cAAc,cAC7BC,SAAUF,SAASC,cAAc,eCMnC,SAASE,IACP,OAAOC,KAAKC,MAAMC,aAAaC,QATb,UASsC,E,KAS1DC,EAAe,C,QAhBf,SAAiBC,GACf,MAAMC,EAAQP,IACdO,EAAMC,KAAKF,GACXH,aAAaM,QALK,OAKgBR,KAAKS,UAAUH,G,WAazBP,E,WAN1B,SAAoBW,GAClB,MACMC,EADQZ,IACaa,QAAOC,GAAQA,EAAKH,KAAOA,IACtDR,aAAaM,QAfK,OAegBR,KAAKS,UAAUE,G,GCd5C,IAkBIG,EAAS,CAACC,EAAO,KAC1BC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,CAACT,EAAIU,IAGrDV,IAFFU,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,KAGP,IC9BE,SAASG,EAAWC,GACzB,MAAMnB,EAAO,CAAEK,GAAII,KAMnB,OAJA,IAAIW,SAASD,EAAEE,eAAeC,SAAQ,CAACC,EAAOC,KAC5CxB,EAAKwB,GAAQD,CAAK,IAGbvB,C,CCRF,SAASyB,GAAcC,SAAEA,EAAQC,SAAEA,EAAQtB,GAAEA,IAClD,MAAML,EAAO,iFACoCK,iCACxCqB,kBACFC,eAEPtC,EAAKI,SAASmC,mBAAmB,YAAa5B,E,ECLzC,WACL,MACM6B,EADW9B,EAAgB+B,WACTC,KACtBvB,GAAQ,iFACuCA,EAAKH,kCAC7CG,EAAKkB,yBACPlB,EAAKmB,wBAGZtC,EAAKI,SAASmC,mBAAmB,YAAaC,EAAOG,KAAK,I,CCU5D,GACA3C,EAAKC,KAAK2C,iBAAiB,UCnBpB,SAAsBd,GAC3BA,EAAEe,iBACF,MAAMC,EAAUjB,EAAWC,GAC3BpB,EAAWqC,QAAQD,GACnBV,EAAcU,E,IDgBhB9C,EAAKI,SAASwC,iBAAiB,SErBxB,SAAoBd,GACC,WAAtBA,EAAEkB,OAAOC,UACXvC,EAAgBwC,WAAWpB,EAAEkB,OAAOG,QAAQnC,G","sources":["src/js/refs.js","src/js/localStorageAPI.js","node_modules/nanoid/index.browser.js","src/js/createNote.js","src/js/renderOneNote.js","src/js/renderNotes.js","src/index.js","src/js/onFormSubmit.js","src/js/removeNote.js"],"sourcesContent":["export default {\n  form: document.querySelector('#task-form'),\n  taskList: document.querySelector('#task-list'),\n};\n","const STORAGE_KEY = 'note';\n\nfunction addNote(note) {\n  const notes = getNotes();\n  notes.push(note);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(notes));\n}\n\nfunction getNotes() {\n  return JSON.parse(localStorage.getItem(STORAGE_KEY)) || [];\n}\n\nfunction removeNote(id) {\n  const notes = getNotes();\n  const updatedNotes = notes.filter(item => item.id !== id);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedNotes));\n}\n\nexport default { addNote, getNotes, removeNote };\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\n\nexport function createNote(e) {\n  const note = { id: nanoid() };\n\n  new FormData(e.currentTarget).forEach((value, name) => {\n    note[name] = value;\n  });\n\n  return note;\n}\n","import refs from './refs';\nexport function renderOneNote({ taskName, taskText, id }) {\n  const note = `<li class=\"task-list-item\">\n     <button class=\"task-list-item-btn\" data-id=\"${id}\">Удалить</button>\n     <h3>${taskName}</h3>\n    <p>${taskText}</p>\n</li>`;\n  refs.taskList.insertAdjacentHTML('beforeend', note);\n}\n","import localStorageAPI from './localStorageAPI';\nimport refs from './refs';\nexport function renderNotes() {\n  const notesArr = localStorageAPI.getNotes();\n  const markup = notesArr.map(\n    item => `<li class=\"task-list-item\">\n     <button class=\"task-list-item-btn\" data-id=\"${item.id}\">Удалить</button>\n     <h3>${item.taskName}</h3>\n    <p>${item.taskText}</p>\n</li>`\n  );\n  refs.taskList.insertAdjacentHTML('beforeend', markup.join(''));\n}\n","/**\n * Створи список справ.\n * На сторінці є два інпути які має вводиться назва і текст задачі.\n * Після натискання на кнопку \"Додати\" завдання додається до списку #task-list.\n *\n * Розмітка картки задачі\n * <li class=\"task-list-item\">\n *     <button class=\"task-list-item-btn\">Удалить</button>\n *     <h3>Заголовок</h3>\n *     <p>Текст</p>\n * </li>\n *\n * У кожної картки має бути кнопка \"Видалити\", щоб можна було\n * прибрати завдання зі списку.\n * Список із завданнями має бути доступним після перезавантаження сторінки.\n */\nimport refs from './js/refs';\nimport { onFormSubmit } from './js/onFormSubmit';\nimport { renderNotes } from './js/renderNotes';\nimport { removeNote } from './js/removeNote';\n\nrenderNotes();\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.taskList.addEventListener('click', removeNote);\n","import storageAPI from './localStorageAPI';\nimport { createNote } from './createNote';\nimport { renderOneNote } from './renderOneNote';\nexport function onFormSubmit(e) {\n  e.preventDefault();\n  const newNote = createNote(e)\n  storageAPI.addNote(newNote);\n  renderOneNote(newNote);\n}\n","import localStorageAPI from './localStorageAPI';\n\nexport function removeNote(e) {\n  if (e.target.nodeName === 'BUTTON') {\n    localStorageAPI.removeNote(e.target.dataset.id);\n  }\n}\n"],"names":["$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","form","document","querySelector","taskList","$f1e93b4660a948dd$var$getNotes","JSON","parse","localStorage","getItem","$f1e93b4660a948dd$export$2e2bcd8739ae039","note","notes","push","setItem","stringify","id","updatedNotes","filter","item","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","$d4daa78a533cd9de$export$4640c0d5ffcf906e","e","FormData","currentTarget","forEach","value","name","$2e714459d5dd6a99$export$c84254b23269d5ce","taskName","taskText","insertAdjacentHTML","markup","getNotes","map","join","addEventListener","preventDefault","newNote","addNote","target","nodeName","removeNote","dataset"],"version":3,"file":"index.062e9d9c.js.map"}